{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bytesToString = exports.stringToBytes = exports.NIL = exports.X500 = exports.OID = exports.URL = exports.DNS = exports.hexToByte = exports.byteToHex = void 0;\nvar _byteToHex = [];\nvar _hexToByte = {};\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\nexports.byteToHex = _byteToHex;\nexports.hexToByte = _hexToByte;\nexports.DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.OID = '6ba7b812-9dad-11d1-80b4-00c04fd430c8';\nexports.X500 = '6ba7b814-9dad-11d1-80b4-00c04fd430c8';\nexports.NIL = '00000000-0000-0000-0000-000000000000';\nvar stringToBytes = function stringToBytes(str) {\n  str = unescape(encodeURIComponent(str));\n  var bytes = new Uint8Array(str.length);\n  for (var j = 0; j < str.length; ++j) {\n    bytes[j] = str.charCodeAt(j);\n  }\n  return bytes;\n};\nexports.stringToBytes = stringToBytes;\nvar bytesToString = function bytesToString(buf) {\n  var bufferView = new Uint8Array(buf, 0, buf.byteLength);\n  return String.fromCharCode.apply(null, Array.from(bufferView));\n};\nexports.bytesToString = bytesToString;","map":{"version":3,"names":["_byteToHex","_hexToByte","i","toString","substr","exports","byteToHex","hexToByte","DNS","URL","OID","X500","NIL","stringToBytes","str","unescape","encodeURIComponent","bytes","Uint8Array","length","j","charCodeAt","bytesToString","buf","bufferView","byteLength","String","fromCharCode","apply","Array","from"],"sources":["/Users/pk/code/simple-pass/node_modules/react-native-uuid/src/utils.ts"],"sourcesContent":["let _byteToHex: string[] = [];\nlet _hexToByte: {[key: string]: number} = {};\n\nfor (var i = 0; i < 256; i++) {\n  _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n  _hexToByte[_byteToHex[i]] = i;\n}\n\nexport const byteToHex = _byteToHex;\nexport const hexToByte = _hexToByte;\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport const OID = '6ba7b812-9dad-11d1-80b4-00c04fd430c8';\nexport const X500 = '6ba7b814-9dad-11d1-80b4-00c04fd430c8';\nexport const NIL = '00000000-0000-0000-0000-000000000000';\n\nexport const stringToBytes = (str: string) => {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes: Uint8Array = new Uint8Array(str.length);\n\n  for (let j = 0; j < str.length; ++j) {\n    bytes[j] = str.charCodeAt(j);\n  }\n\n  return bytes;\n};\n\nexport const bytesToString = (buf: ArrayBuffer) => {\n  const bufferView = new Uint8Array(buf, 0, buf.byteLength);\n  return String.fromCharCode.apply(null, Array.from(bufferView));\n};\n"],"mappings":";;;;;;AAAA,IAAIA,UAAU,GAAa,EAAE;AAC7B,IAAIC,UAAU,GAA4B,EAAE;AAE5C,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,GAAG,EAAEA,CAAC,EAAE,EAAE;EAC5BF,UAAU,CAACE,CAAC,CAAC,GAAG,CAACA,CAAC,GAAG,KAAK,EAAEC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC;EAClDH,UAAU,CAACD,UAAU,CAACE,CAAC,CAAC,CAAC,GAAGA,CAAC;;AAGlBG,OAAA,CAAAC,SAAS,GAAGN,UAAU;AACtBK,OAAA,CAAAE,SAAS,GAAGN,UAAU;AAEtBI,OAAA,CAAAG,GAAG,GAAG,sCAAsC;AAC5CH,OAAA,CAAAI,GAAG,GAAG,sCAAsC;AAC5CJ,OAAA,CAAAK,GAAG,GAAG,sCAAsC;AAC5CL,OAAA,CAAAM,IAAI,GAAG,sCAAsC;AAC7CN,OAAA,CAAAO,GAAG,GAAG,sCAAsC;AAElD,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,GAAW,EAAI;EAC3CA,GAAG,GAAGC,QAAQ,CAACC,kBAAkB,CAACF,GAAG,CAAC,CAAC;EAEvC,IAAMG,KAAK,GAAe,IAAIC,UAAU,CAACJ,GAAG,CAACK,MAAM,CAAC;EAEpD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,GAAG,CAACK,MAAM,EAAE,EAAEC,CAAC,EAAE;IACnCH,KAAK,CAACG,CAAC,CAAC,GAAGN,GAAG,CAACO,UAAU,CAACD,CAAC,CAAC;;EAG9B,OAAOH,KAAK;AACd,CAAC;AAVYZ,OAAA,CAAAQ,aAAa,GAAAA,aAAA;AAYnB,IAAMS,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,GAAgB,EAAI;EAChD,IAAMC,UAAU,GAAG,IAAIN,UAAU,CAACK,GAAG,EAAE,CAAC,EAAEA,GAAG,CAACE,UAAU,CAAC;EACzD,OAAOC,MAAM,CAACC,YAAY,CAACC,KAAK,CAAC,IAAI,EAAEC,KAAK,CAACC,IAAI,CAACN,UAAU,CAAC,CAAC;AAChE,CAAC;AAHYnB,OAAA,CAAAiB,aAAa,GAAAA,aAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}